{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","panels/Frends.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","platform","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","osName","Persik","props","left","IOS","className","persik","alt","Frends","fetchFrends","data","users","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","fetchedFrends","setFrends","useEffect","connect","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","console","log","a","async","sendPromise","user","frends","fetchData","e","currentTarget","dataset","to","send","ReactDOM","render","getElementById"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,oC,ynBCuD5BC,EA1CF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GACV,kBAAC,IAAD,KAAcG,eACbD,GACD,kBAAC,IAAD,CAAOE,MAAM,qCACZ,kBAAC,IAAD,CACCC,OAAQH,EAAYI,UAAY,kBAAC,IAAD,CAAQC,IAAKL,EAAYI,YAAe,KACxEE,YAAaN,EAAYO,MAAQP,EAAYO,KAAKL,MAAQF,EAAYO,KAAKL,MAAQ,IAFpF,UAIKF,EAAYQ,WAJjB,YAI+BR,EAAYS,aAI5C,kBAAC,IAAD,CAAOP,MAAM,sBACZ,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQQ,KAAK,KAAKC,MAAM,IAAIC,QAASb,EAAIc,UAAQ,UAAjD,+BAID,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQH,KAAK,KAAKC,MAAM,IAAIC,QAASb,EAAIc,UAAQ,UAAjD,kC,qECrBEC,G,OAASb,eAoBAc,EAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOlB,GAAIkB,EAAMlB,IAChB,kBAAC,IAAD,CACCmB,KAAM,kBAAC,IAAD,CAAcL,QAASI,EAAMjB,GAAIc,UAAQ,QAC7CC,IAAWI,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKC,UAAU,SAASd,IAAKe,IAAQC,IAAI,qBCXrCP,EAASb,cA4BAqB,EA1BA,SAAAN,GAAK,OACnB,kBAAC,IAAD,CAAOlB,GAAIkB,EAAMlB,IAChB,kBAAC,IAAD,CAECmB,KAAM,kBAAC,IAAD,CAAcL,QAASI,EAAMjB,GAAIc,UAAQ,QAC7CC,IAAWI,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAH3C,uEAQA,kBAAC,IAAD,KACEF,EAAMO,YAAYC,KAAKC,MAAM3B,MC2BlB4B,EAzCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEV3B,EAFU,KAEG8B,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAejB,KAAK,WAHxC,mBAGVqB,EAHU,KAGFC,EAHE,OAIkBL,mBAAS,MAJ3B,mBAIVM,EAJU,KAIKC,EAJL,KAOjBC,qBAAU,WACTC,IAAQC,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMf,EAAY,EAAZA,KACpC,GAAa,yBAATe,EAAiC,CACpC,IAAMC,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQnB,EAAKoB,OAASpB,EAAKoB,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAIxCQ,QAAQC,IAAI,SACZ,qBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACoBd,IAAQgB,YAAY,wBADxC,cACOC,EADP,kBAAAH,EAAA,MAGsBd,IAAQgB,YAAY,uBAH1C,OAGOE,EAHP,OAICpB,EAAUoB,GACVxB,EAAQuB,GACRrB,EAAU,MANX,qCAQAuB,KACE,IAEH,IAAMxD,EAAK,SAAAyD,GACV3B,EAAe2B,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAM/B,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAMjC,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,IACxB,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,EAAIwB,YAAaU,MCtC5CG,IAAQwB,KAAK,gBAQbC,IAASC,OAAO,kBAAC,EAAD,MAASrB,SAASsB,eAAe,W","file":"static/js/main.050ab9ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n\n\nimport {platform} from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>{platform()}</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"frends\">\n\t\t\t\t\tShow me the Frends, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\n\r\n\r\n\r\nconst osName = platform();\r\n\r\nconst Frends = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\r\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</HeaderButton>}\r\n\t\t>\r\n\t\t\tВыбери друга\r\n\t\t</PanelHeader>\r\n\t\t<Div>\r\n\t\t\t{props.fetchFrends.data.users.id}\r\n\t\t</Div>\r\n\t\t\r\n\r\n\t\t\r\n\t</Panel>\r\n\t\r\n);\r\n\r\n\r\nFrends.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Frends;\r\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Frends from './panels/Frends';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [fetchedFrends, setFrends] = useState(null);\n\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\t// const plat = location.search\n\t\tconsole.log('hello')\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t\t\t\n\t\t\tconst frends = await connect.sendPromise('VKWebAppGetFriends')\n\t\t\tsetFrends(frends)\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t\t<Frends id='frends' go={go} fetchFrends={fetchedFrends} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}